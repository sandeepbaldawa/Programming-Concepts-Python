http://www.the-art-of-web.com/system/logs/

Parsing CSV and json
=====================
https://automatetheboringstuff.com/chapter14/

Questions
=========
Any limitations memory, time etc..


def print_fizz(n):
  for i in xrange(1,n+1):
    if i%3 == 0 and i%5 == 0:
      print "FizzBuzz"
    elif i%3 == 0:
      print "Fizz",
    elif i%5 == 0:
      print "Buzz",
    else:
      print "{0} ".format(i),
      
print_fizz(15) 


Questions
=========
Can we assume syslog format will be uniform? or it can be malformed?



Parse /var/log/syslog and extract values.

Dec  3 00:02:54 Mac Google Chrome Helper[69194]: Couldn't set selectedTextBackgroundColor from default ()
Dec  3 00:03:05 Mac Safari[68992]: KeychainGetICDPStatus: keychain: -25300
Dec  3 00:03:05 Mac Safari[68992]: KeychainGetICDPStatus: status: off
Dec  3 00:03:06 Mac com.apple.xpc.launchd[1] (com.apple.WebKit.Networking.AC8ED90D-0AC0-4666-B213-8BE93DE51E8C[68993]): Service exited with abnormal code: 1
Dec  3 00:03:08 Mac WindowServer[68664]: CGXGetConnectionProperty: Invalid connection 20367
Dec  3 00:03:08 Mac garcon[68729]: host connection <NSXPCConnection: 0x7fc9d8f1eda0> connection from pid 68708 invalidated
Dec  3 00:03:08 Mac WindowServer[68664]: CGXGetConnectionProperty: Invalid connection 20367
Write a script which parses /var/log/messages and
generates a CSV with two columns: minute, number_of_messages in sorted time order.

minute,number_of_messages
Dec  3 00:02,1
Dec  3 00:03,6
Extract the program name from the field between the hostname and the log message and output those values in columns.

minute,number_of_messages,Google Chrome Helper,Safari,com.apple.xpc.launchd,WindowServer,garcon
Dec  3 00:02,1,0,0,0,0
Dec  3 00:03,0,2,1,2,1

For first part
==============
import re
import csv
from collections import Counter
regexp = "^(.*? \d+\s+\d+:\d+):\d+.*"
c = Counter()
with open("test.txt","r") as f:
  for each_line in f:
    c.update(re.match(regexp, each_line).groups())
c = sorted(c.items(), key=lambda x:x[1])

with open("output.txt","w+") as f:
   writer = csv.writer(f)
   for key, val in c:
      writer.writerow([key,val])


For second part
===============
import re
import csv
from collections import Counter
regexp = "^(.*? \d+\s+\d+:\d+):\d+\s+(.*?)\["
c = Counter()
with open("test.txt","r") as f:
  for each_line in f:
        match = re.match(regexp, each_line)
        time = match.group(1)
        msg = match.group(2)
        c.update((time, msg))
c = sorted(c.items(), key=lambda x:x[1])

with open("output.txt","w+") as f:
   writer = csv.writer(f)
   for key, val in c:
      writer.writerow([key,val])


import requests

def get_reporting_structure(id, depth=0):
  try:
    employee = requests.get('http://www.linkedin.corp/api/employee/%s' % employee_id)
    res = request.get(url)
    json_file = json.loads(res)
    print " " * depth,
    print  json_file['name'], json_file['title']
    res.raise_for_status()
    for report in json_file['reports']:
        get_reporting_structure(report)
  except:
    raise RunTimeError('Reporting structure call failed')

get_reporting_structure("whoami", id)
