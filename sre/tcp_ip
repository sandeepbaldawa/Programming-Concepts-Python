A protocol suite, such as TCP/IP, is the combination of
different protocols at various layers. TCP/IP is normally considered to be a 4-layer system,

Application (Telnet, FTP, e-mail, etc.)
Transport (TCP, UDP)
Network (IP, ICMP, IGMP)
Link (device driver and interface card)

Each layer has a different responsibility.
1. The link layer, sometimes called the data-link layer or network interface layer, normally
includes the device driver in the operating system and the corresponding network
interface card in the computer. Together they handle all the hardware details of physically
interfacing with the cable (or whatever type of media is being used).
2. The network layer (sometimes called the internet layer) handles the movement of packets
around the network. Routing of packets, for example, takes place here. IP (Internet
Protocol), ICMP (Internet Control Message Protocol), and IGMP (Internet Group
Management Protocol) provide the network layer in the TCP/IP protocol suite.
3. The transport layer provides a flow of data between two hosts, for the application layer
above. In the TCP/IP protocol suite there are two vastly different transport protocols:
TCP (Transmission Control Protocol) and UDP (User Datagram Protocol). 

TCP provides a reliable flow of data between two hosts. It is concerned with things such
as dividing the data passed to it from the application into appropriately sized chunks for
the network layer below, acknowledging received packets, setting timeouts to make
certain the other end acknowledges packets that are sent, and so on. Because this reliable
flow of data is provided by the transport layer, the application layer can ignore all these
details.

UDP, on the other hand, provides a much simpler service to the application layer. It just
sends packets of data called datagrams from one host to the other, but there is no
guarantee that the datagrams reach the other end. Any desired reliability must be added
by the application layer.

4. The application layer handles the details of the particular application. There are many
common TCP/IP applications that almost every implementation provides:
❍ Telnet for remote login,
❍ FTP, the File Transfer Protocol,
❍ SMTP, the Simple Mail Transfer protocol, for electronic mail,
❍ SNMP, the Simple Network Management Protocol, 

Link Layer
=========
|     6     |    6        |  2     |  1   | 1    | 1    |   3     |  2  |   38-1492    |  4   |   
| Dest addr | source addr | length | DSAP | SSAP |  cmd | org code| type|     data     |  CRC |


What is loopback?
=================
 Most implementations support a loopback interface that allows a client and server on the same
host to communicate with each other using TCP/IP. The class A network ID 127 is reserved for
the loopback interface. By convention, most systems assign the IP address of 127.0.0.1 to this
interface and assign it the name localhost.

What is MTU?
==========
There is a limit on the size of the frame for both Ethernet encapsulation and 802.3 encapsulation. This limits the number of
bytes of data to 1500 and 1492, respectively. This characteristic of the link layer is called the MTU, its maximum transmission
unit. Most types of networks have an upper limit. If IP has a datagram to send, and the datagram is larger than the link layer's MTU, IP performs
fragmentation, breaking the datagram up into smaller pieces (fragments), so that each fragment is
smaller than the MTU.

How to find MTU?
================

netstat -in
Name Mtu Net/Dest Address lpkts lerrs Opkts Oerrs Collis Queue
leO 1500 140.252.13.32 140.252.13.33 67719 0 92133 0 1 0
slO 552 140.252.1.183 140.252.1.29 48035 0 54963 0 0 0
loO 1536 127.0.0.0 127.0.0.1 15548 0 15548 0 0 0

This command prints the MTU of each interface, the number of input packets, input errors, output
packets, output errors, collisions, and the current size of the output queue. 

What is path MTU?
=================
When two hosts on the same network are communicating with each other, it is the MTU of the
network that is important. But when two hosts are communicating across multiple networks, each
link can have a different MTU. The important numbers are not the MTUs of the two networks to
which the two hosts connect, but rather the smallest MTU of any data link that packets traverse
between the two hosts. This is called the path MTU.

What is ARP? (Address Resolution Protocol)
===========
- Assuming an Ethernet, the sending host must convert the 32-bit IP address into a 48-bit
Ethernet address. A translation is required from the logical Internet address to its
corresponding physical hardware address. This is the function of ARP.
ARP is intended for broadcast networks where many hosts or routers are connected to a
single network.
- ARP sends an Ethernet frame called an ARP request to every host on the network. This is
called a broadcast. The ARP request contains the IP address of the destination host (whose name is bsdi) and is the
request "if you are the owner of this IP address, please respond to me with your hardware
address." 
- The destination host's ARP layer receives this broadcast, recognizes that the sender is
asking for its hardware address, and replies with an ARP reply. This reply contains the IP
address and the corresponding hardware address.
- The ARP reply is received and the IP datagram that forced the ARP request-reply to be
exchanged can now be sent.
- The IP datagram is sent to the destination host. 

The fundamental concept behind ARP is that the network interface has a hardware address (a 48-
bit value for an Ethernet or token ring interface). Frames exchanged at the hardware level must be
addressed to the correct interface. But TCP/IP works with its own addresses: 32-bit IP addresses.
Knowing a host's IP address doesn't let the kernel send a frame to that host. The kernel (i.e., the
Ethernet driver) must know the destination's hardware address to send it data.

 The function of ARP is to provide a dynamic mapping between 32-bit IP addresses and the hardware addresses
used by various network technologies. 

What is ARP cache?
===============
Essential to the efficient operation of ARP is the maintenance of an ARP cache on each host. This
cache maintains the recent mappings from Internet addresses to hardware addresses. The normal
expiration time of an entry in the cache is 20 minutes from the time the entry was created. 

 arp -a
sun (140.252.13.33) at 8:0:20:3:f6:42
svr4 (140.252.13.34) at 0:0:c0:c2:9b:26

What is RARP?(Reverse address resolution protocol?)
===================================================
When a system with a local disk is bootstrapped it normally obtains its IP address from a
configuration file that's read from a disk file. But a system without a disk, such as an X
terminal or a diskless workstation, needs some other way to obtain its IP address. 

Each system on a network has a unique hardware address, assigned by the manufacturer
of the network interface. The principle of RARP is for the diskless system to read its
unique hardware address from the interface card and send an RARP request (a broadcast
frame on the network) asking for someone to reply with the diskless system's IP address
(in an RARP reply). 

What is ICMP?(Internet Control message protocol)?
=================================================

| Header | 8bit type | 8 bit message | 16 bit checksum |

CMP (Internet Control Message Protocol) is an error-reporting protocol network devices like 
routers use to generate error messages to the source IP address when network problems prevent delivery 
of IP packets.
ICMP is often considered part of the IP layer. It communicates error messages and other
conditions that require attention. ICMP messages are usually acted on by either the IP layer
or the higher layer protocol (TCP or UDP). Some ICMP messages cause errors to be
returned to user processes. 

How does ping work?
====================
Unix implementations of ping set the identifier field in the ICMP message to the process ID of
the sending process. This allows ping to identify the returned responses if there are multiple
instances of ping running at the same time on the same host. 

The sequence number starts at 0 and is incremented every time a new echo request is sent. ping
prints the sequence number of each returned packet, allowing us to see if packets are missing,
reordered, or duplicated. IP is a best effort datagram delivery service, so any of these three
conditions can occur. 

When the ICMP echo reply is returned, the sequence number is printed, followed by the TTL,
and the round-trip time is calculated. (TTL is the time-to-live field in the IP header. The current
BSD ping program prints the received TTL each time an echo reply is received-some
implementations don't do this. 

For now realize that if we type a ping
command, and a few seconds pass before the first line of output with the IP address is printed,
this is the time required for the DNS to determine the IP address corresponding to the hostname. 

How does traceroute work?
=========================
Traceroute uses ICMP and the TTL field in the IP header. The TTL field (time-to-live) is an
8-bit field that the sender initializes to some value. The recommended initial value is
specified in the Assigned Numbers RFC and is currently 64

The purpose of the TTL field is to prevent datagrams from ending up in infinite loops,
which can occur during routing transients. For example, when a router crashes or when the
connection between two routers is lost, it can take the routing protocols some time (from
seconds to a few minutes) to detect the lost route and work around it. During this time
period it is possible for the datagram to end up in routing loops. The TTL field puts an
upper limit on these looping datagrams. 

We can now guess the operation of Traceroute. It sends an IP datagram with a TTL of 1 to
the destination host. The first router to handle the datagram decrements the TTL, discards
the datagram, and sends back the ICMP time exceeded. This identifies the first router in the
path. Traceroute then sends a datagram with a TTL of 2, and we find the IP address of the
second router. This continues until the datagram reaches the destination host. But even
though the arriving IP datagram has a TTL of 1, the destination host won't throw it away
and generate the ICMP time exceeded, since the datagram has reached its final destination.
How can we determine when we've reached the destination?
Traceroute sends UDP datagrams to the destination host, but it chooses the destination UDP
port number to be an unlikely value (larger than 30,000), making it improbable that an
application at the destination is using that port. This causes the destination host's UDP
module to generate an ICMP "port unreachable" error when the datagram
arrives. All Traceroute needs to do is differentiate between the received ICMP messagestime
exceeded versus port unreachable-to know when it's done. 




what is 3 way handshake
======================
Happens before a http request is done
- Use between client to server to see if they can even connect and speak to each other.

Client send to Server => SYNC(fundamentally meaning can I connect to you? from client)
Server send to Client => SYNC, ACK (fundamentally meaning I acknowledge you made a request and yes you can connect to me from server)
Client send to Server => ACK(fundamentally meaning server acknowledged, thanks we are now ready for all communication from client)

If SYNC/ACK not received means
1. Server is down
2. Or client blocked by firewall

How does connection end?
=======================
Once client received a http request response/file etc.

Client send to Server => FIN(fundamentally meaning am done from client)
Server send to Client => FIN, ACK (fundamentally meaning I acknowledge you made a finish request and yes you can dis-connect to me from server)
Client send to Server => ACK

What is a traceroute, and how does it work?
==========================================
understanding of ICMP, TTL, and routing hops. Bonus points if they also know UDP trace routing.

What is NAT? Where would you use it? How does it work? What are some limitations?
=================================================================================

What is QoS? How does it work? Where would you apply it? When is it enforced?

What I'm looking for: knowledge of traffic prioritization schemes, at least a vague understanding of classification levels at the header level, understanding of judicious application to time and 
latency sensitive protocols, and knowledge of contention vs. non-contention
===========================================================================


