multiply
=======
# Program to multiply two matrices using nested loops

# 3x3 matrix
X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
# 3x4 matrix
Y = [[5,8,1,2],
    [6,7,3,0],
    [4,5,9,1]]
# result is 3x4
result = [[0,0,0,0],
         [0,0,0,0],
         [0,0,0,0]]

# iterate through rows of X
for i in range(len(X)):
   # iterate through columns of Y
   for j in range(len(Y[0])):
       # iterate through rows of Y
       for k in range(len(Y)):
           result[i][j] += X[i][k] * Y[k][j]

for r in result:
   print(r)


# Program to multiply two matrices using list comprehension

# 3x3 matrix
X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]

# 3x4 matrix
Y = [[5,8,1,2],
    [6,7,3,0],
    [4,5,9,1]]

# result is 3x4
result = [[sum(a*b for a,b in zip(X_row,Y_col)) for Y_col in zip(*Y)] for X_row in X]

for r in result:
   print(r)

reverse file
=============

import os

bufsize = 1 << 15
with open('file.in', 'rb') as f, open('file.out', 'wb') as fout:
    f.seek(0, os.SEEK_END) # move to the end of file
    for pos in reversed(xrange(0, f.tell(), bufsize)):
        f.seek(pos, os.SEEK_SET)
        fout.write(f.read(bufsize)[::-1])


print all files in dir
======================
for parent, dirs, files in os.walk("/home/DataScience"):   
    for dirname in dirs:
        print dirname
    for filename in files:
        print filename
