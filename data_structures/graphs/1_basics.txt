Key Concepts
=============
- Graphs are any combination of nodes and edges. A single node is a graph.
- A directed graph has edges that only apply one way, i.e, if there is an edge from A to B, that does not mean that there is an edge from B to A
- An undirected graph has double sided edges, i.e, an edge from A to B also implied an edge from B to A
- You should clarify with the interviewer if the graph is directed or undirected.
- A clique is when each node has an edge to every other node in the graph.
- Graphs are represented in memory in 2 ways - adjacency list and adjacency matrix
- In adjacency list, each node maintains a list of neighbors. e.g, A -> [B, C] & B -> [A, D]
- In adjacency matrix, a square matrix maps the edges between nodes.
Unless specified otherwise, adjacency list is the de facto method used to represent graphs.

ADJACENCY LIST
==============
A -> {B, C}
C -> {B, D}

class Node {
   List<Node> neighbours;
   int data;
}

class Graph {
   List<Node> neighbours;
}

Finding edges easier in adjancency matrix
Finding neighbours easier in adjancency list
