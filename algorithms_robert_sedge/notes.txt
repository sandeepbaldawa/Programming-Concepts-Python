week1:-
--------
Problem :- Dynamic Connectivity
1. Union-connect
Union - connects two nodes
Connect - Queries if two nodes are connected 
Connected components :- Maintains table of all connected components

Problem:-
Given set of N objects
union connects any two objects
connect checks if connectivity exists between two components..

eg:- Given a complex maze, find route from source to destination, pixels in photos..friends in network, 

Fundamentally helps find connected components..

More concretely
- Given N objects
- Given M operations(union and find)
- Find an efficient datastructure for union find

class UF():
    def __init__(self, N):
      self.N = N #initialized with N objects
    
    def union(p, q) # Need to define this
    def connected(p, q) # Need to define this


